package org.example;

import org.testng.annotations.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class TestCard {


    @Test
    public void testCardConstructorWithNegativeValue() {
        assertThrows(IllegalArgumentException.class, () -> {new Card(-1); });
    }

    @Test
    public void testCardConstructorWithNullValue() {
        assertThrows(IllegalArgumentException.class, () -> {new Card(null);});
    }

    @Test
    public void testConstructor() {
        int testValue = 5;
        Card card = new Card(testValue);
        assertEquals(testValue, card.getValue());
    }

    @Test
    public void testEdgeValues() {
        Card card = new Card(Integer.MAX_VALUE);
        assertEquals(Integer.MAX_VALUE, card.getValue());

        card = new Card(0);
        assertEquals(0, card.getValue());
    }

    @Test
    public void testGetValue() {
        int testValue = 10;
        Card card = new Card(testValue);
        assertEquals(testValue, card.getValue());
    }

    @Test
    public void testToString() {
        int testValue = 7;
        Card card = new Card(testValue);
        assertEquals(String.valueOf(testValue), card.toString());
    }

    @Test
    public void testToStringMaxCase() {
        Card card = new Card(Integer.MAX_VALUE);
        assertEquals(String.valueOf(Integer.MAX_VALUE), card.toString());
    }

    @Test
    public void testToStringMinCase() {
        Card card = new Card(0);
        assertEquals("0", card.toString());
    }

    @Test
    public void testImmutability() {
        Card card = new Card(5);
        assertEquals(5, card.getValue());
        assertEquals(5, card.getValue());
    }
}
